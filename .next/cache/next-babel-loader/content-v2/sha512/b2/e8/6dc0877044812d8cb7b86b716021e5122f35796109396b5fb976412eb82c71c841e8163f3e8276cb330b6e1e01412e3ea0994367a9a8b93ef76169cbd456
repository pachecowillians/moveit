{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/wps/Arquivos/Estudos/Cursos/Arquivos fonte/ReactOS/NLW-04/moveit-next/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: 1,\n      levelUp: levelUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"ncs16728k9gXVLb/fXETIQyuku4=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/wps/Arquivos/Estudos/Cursos/Arquivos fonte/ReactOS/NLW-04/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","levelUp"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAmD,OAAnD;AAEA,OAAO,IAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAMP,OAAO,SAASG,kBAAT,OAAmE;AAAA;;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;;AAAA,kBAE5CH,QAAQ,CAAC,CAAD,CAFoC;AAAA,MAE/DI,KAF+D;AAAA,MAExDC,QAFwD;;AAAA,mBAGpBL,QAAQ,CAAC,CAAD,CAHY;AAAA,MAG/DM,iBAH+D;AAAA,MAG5CC,oBAH4C;;AAKtE,WAASC,OAAT,GAAmB;AACfH,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AAED,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE,CAAT;AAAYI,MAAAA,OAAO,EAAPA;AAAZ,KAAnC;AAAA,cACKL;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAdeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, useState, ReactNode } from 'react'\n\nexport const ChallengesContext = createContext({});\n\ninterface ChallengesProviderProps {\n    children: ReactNode;\n}\n\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\n\n    const [level, setLevel] = useState(1)\n    const [currentExperience, setCurrentExperience] = useState(0)\n\n    function levelUp() {\n        setLevel(level + 1)\n    }\n\n    return (\n        <ChallengesContext.Provider value={{ level: 1, levelUp }}>\n            {children}\n        </ChallengesContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}