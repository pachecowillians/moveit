{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/wps/Arquivos/Estudos/Cursos/Arquivos fonte/ReactOS/NLW-04/moveit-next/src/components/Countdown.tsx\";\nimport { useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nlet countdownTimeout;\nexport function Countdown() {\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000); //Inicia o timeout para decrementar os segundos\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]); //Quando isActive ou time mudar\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        onClick: resetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 30\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/wps/Arquivos/Estudos/Cursos/Arquivos fonte/ReactOS/NLW-04/moveit-next/src/components/Countdown.tsx"],"names":["useEffect","styles","countdownTimeout","Countdown","minuteLeft","minuteRight","String","minutes","padStart","split","secondLeft","secondRight","seconds","startCountdown","setIsActive","resetCountdown","clearTimeout","setTime","isActive","time","setTimeout","setHasFinished","startNewChallenge","countdownContainer","hasFinished","countdownButton","countdownButtonActive"],"mappings":";;;AAAA,SAAmBA,SAAnB,QAAgD,OAAhD;AAEA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,IAAIC,gBAAJ;AAEA,OAAO,SAASC,SAAT,GAAqB;AACxB,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACC,OAAD,CAAN,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BL,MAAM,CAACM,OAAD,CAAN,CAAgBJ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;;AAGA,WAASI,cAAT,GAA0B;AACtBC,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASC,cAAT,GAA0B;AACtBC,IAAAA,YAAY,CAACd,gBAAD,CAAZ;AACAY,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAG,IAAAA,OAAO,CAAC,MAAM,EAAP,CAAP;AACH;;AAEDjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkB,QAAQ,IAAIC,IAAI,GAAG,CAAvB,EAA0B;AACtBjB,MAAAA,gBAAgB,GAAGkB,UAAU,CAAC,MAAM;AAChCH,QAAAA,OAAO,CAACE,IAAI,GAAG,CAAR,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B,CADsB,CAGZ;AACb,KAJD,MAIO,IAAID,QAAQ,IAAIC,IAAI,KAAK,CAAzB,EAA4B;AAC/BE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAP,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAQ,MAAAA,iBAAiB;AACpB;AACJ,GAVQ,EAWL,CAACJ,QAAD,EAAWC,IAAX,CAXK,CAAT,CAfwB,CA0BF;;AAEtB,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAElB,MAAM,CAACsB,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOnB;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOK;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaKa,WAAW,gBACR;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,SAAS,EAAEvB,MAAM,CAACwB,eAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAQJ;AAAA,gBACKP,QAAQ,gBACL;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAG,GAAEjB,MAAM,CAACwB,eAAgB,IAAGxB,MAAM,CAACyB,qBAAsB,EAFzE;AAGI,QAAA,OAAO,EAAEX,cAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,gBAQJ;AACD,QAAA,IAAI,EAAC,QADJ;AAED,QAAA,SAAS,EAAEd,MAAM,CAACwB,eAFjB;AAGD,QAAA,OAAO,EAAEZ,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATT,qBArBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH","sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { ChallengesContext } from '../contexts/ChallengesContext';\nimport styles from '../styles/components/Countdown.module.css'\n\nlet countdownTimeout: NodeJS.Timeout\n\nexport function Countdown() {\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('')\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('')\n\n\n    function startCountdown() {\n        setIsActive(true)\n    }\n\n    function resetCountdown() {\n        clearTimeout(countdownTimeout)\n        setIsActive(false)\n        setTime(0.1 * 60)\n    }\n\n    useEffect(() => {\n        if (isActive && time > 0) {\n            countdownTimeout = setTimeout(() => {\n                setTime(time - 1)\n            }, 1000); //Inicia o timeout para decrementar os segundos\n        } else if (isActive && time === 0) {\n            setHasFinished(true)\n            setIsActive(false)\n            startNewChallenge()\n        }\n    },\n        [isActive, time]) //Quando isActive ou time mudar\n\n    return (\n        <div>\n            <div className={styles.countdownContainer}>\n                <div>\n                    <span>{minuteLeft}</span>\n                    <span>{minuteRight}</span>\n                </div>\n                <span>:</span>\n                <div>\n                    <span>{secondLeft}</span>\n                    <span>{secondRight}</span>\n                </div>\n            </div>\n\n            {hasFinished ? (\n                <button\n                    disabled\n                    className={styles.countdownButton}\n                >\n                    Ciclo encerrado\n                </button>\n            ) : (\n                    <>\n                        {isActive ? (\n                            <button\n                                type='button'\n                                className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\n                                onClick={resetCountdown}\n                            >\n                                Abandonar ciclo\n                            </button>\n                        ) : (<button\n                            type='button'\n                            className={styles.countdownButton}\n                            onClick={startCountdown}\n                        >\n                            Iniciar um ciclo\n                        </button>)}\n\n                    </>\n                )}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}