{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/wps/Arquivos/Estudos/Cursos/Arquivos fonte/ReactOS/NLW-04/moveit-next/src/contexts/CountdownContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { ChallengesContext } from './ChallengesContext';\nexport var CountdownContext = /*#__PURE__*/createContext({});\nvar countdownTimeout;\nexport function CountdownProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useContext = useContext(ChallengesContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var _useState = useState(0.1 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n    setHasFinished(false);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000); //Inicia o timeout para decrementar os segundos\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]); //Quando isActive ou time mudar\n\n  return /*#__PURE__*/_jsxDEV(CountdownContext.Provider, {\n    value: {\n      minutes: minutes,\n      seconds: seconds,\n      hasFinished: hasFinished,\n      isActive: isActive,\n      startCountdown: startCountdown,\n      resetCountdown: resetCountdown\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountdownProvider, \"cVu0hsDf1rnm10+qbfS96WIdEJo=\");\n\n_c = CountdownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownProvider\");","map":{"version":3,"sources":["/home/wps/Arquivos/Estudos/Cursos/Arquivos fonte/ReactOS/NLW-04/moveit-next/src/contexts/CountdownContext.tsx"],"names":["createContext","useContext","useEffect","useState","ChallengesContext","CountdownContext","countdownTimeout","CountdownProvider","children","startNewChallenge","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","startCountdown","resetCountdown","clearTimeout","setTimeout"],"mappings":";;;;;AAAA,SAAmBA,aAAnB,EAA6CC,UAA7C,EAAyDC,SAAzD,EAAoEC,QAApE,QAAoF,OAApF;AAEA,SAASC,iBAAT,QAAkC,qBAAlC;AAeA,OAAO,IAAMC,gBAAgB,gBAAGL,aAAa,CAAC,EAAD,CAAtC;AAEP,IAAIM,gBAAJ;AAEA,OAAO,SAASC,iBAAT,OAAiE;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;;AAAA,oBAEtCP,UAAU,CAACG,iBAAD,CAF4B;AAAA,MAE5DK,iBAF4D,eAE5DA,iBAF4D;;AAAA,kBAI5CN,QAAQ,CAAC,MAAM,EAAP,CAJoC;AAAA,MAI7DO,IAJ6D;AAAA,MAIvDC,OAJuD;;AAAA,mBAKpCR,QAAQ,CAAC,KAAD,CAL4B;AAAA,MAK7DS,QAL6D;AAAA,MAKnDC,WALmD;;AAAA,mBAM9BV,QAAQ,CAAC,KAAD,CANsB;AAAA,MAM7DW,WAN6D;AAAA,MAMhDC,cANgD;;AAQpE,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;;AAGA,WAASU,cAAT,GAA0B;AACtBP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASQ,cAAT,GAA0B;AACtBC,IAAAA,YAAY,CAAChB,gBAAD,CAAZ;AACAO,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,MAAM,EAAP,CAAP;AACAI,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH;;AAEDb,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIU,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAA0B;AACtBJ,MAAAA,gBAAgB,GAAGiB,UAAU,CAAC,YAAM;AAChCZ,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B,CADsB,CAGZ;AACb,KAJD,MAIO,IAAIE,QAAQ,IAAIF,IAAI,KAAK,CAAzB,EAA4B;AAC/BK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,MAAAA,iBAAiB;AACpB;AACJ,GAVQ,EAWL,CAACG,QAAD,EAAWF,IAAX,CAXK,CAAT,CAvBoE,CAkC9C;;AAEtB,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AACI,IAAA,KAAK,EAAE;AACHM,MAAAA,OAAO,EAAPA,OADG;AAEHG,MAAAA,OAAO,EAAPA,OAFG;AAGHL,MAAAA,WAAW,EAAXA,WAHG;AAIHF,MAAAA,QAAQ,EAARA,QAJG;AAKHQ,MAAAA,cAAc,EAAdA,cALG;AAMHC,MAAAA,cAAc,EAAdA;AANG,KADX;AAAA,cASKb;AATL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAjDeD,iB;;KAAAA,iB","sourcesContent":["import { Children, createContext, ReactNode, useContext, useEffect, useState } from \"react\";\n\nimport { ChallengesContext } from './ChallengesContext'\n\ninterface CountdownContextData {\n    minutes: number;\n    seconds: number;\n    hasFinished: boolean;\n    isActive: boolean;\n    startCountdown: () => void;\n    resetCountdown: () => void;\n}\n\ninterface CountdownProviderProps {\n    children: ReactNode;\n}\n\nexport const CountdownContext = createContext({} as CountdownContextData)\n\nlet countdownTimeout: NodeJS.Timeout\n\nexport function CountdownProvider({ children }: CountdownProviderProps) {\n\n    const { startNewChallenge } = useContext(ChallengesContext)\n\n    const [time, setTime] = useState(0.1 * 60)\n    const [isActive, setIsActive] = useState(false)\n    const [hasFinished, setHasFinished] = useState(false)\n\n    const minutes = Math.floor(time / 60)\n    const seconds = time % 60\n\n\n    function startCountdown() {\n        setIsActive(true)\n    }\n\n    function resetCountdown() {\n        clearTimeout(countdownTimeout)\n        setIsActive(false)\n        setTime(0.1 * 60)\n        setHasFinished(false)\n    }\n\n    useEffect(() => {\n        if (isActive && time > 0) {\n            countdownTimeout = setTimeout(() => {\n                setTime(time - 1)\n            }, 1000); //Inicia o timeout para decrementar os segundos\n        } else if (isActive && time === 0) {\n            setHasFinished(true)\n            setIsActive(false)\n            startNewChallenge()\n        }\n    },\n        [isActive, time]) //Quando isActive ou time mudar\n\n    return (\n        <CountdownContext.Provider\n            value={{\n                minutes,\n                seconds,\n                hasFinished,\n                isActive,\n                startCountdown,\n                resetCountdown,\n            }}>\n            {children}\n        </CountdownContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}